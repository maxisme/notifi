name: CI
on: [ push ]

jobs:
  version:
    name: "Get Version"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
      last_version: ${{ steps.version.outputs.LAST_VERSION }}
      changelog: ${{ steps.version.outputs.CHANGELOG }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - id: bump_version
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: anothrNick/github-tag-action@1.26.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BRANCHES: master
          DRY_RUN: true
      - id: bump_version_dev
        if: ${{ (!github.event.issue.pull_request && github.ref == 'refs/heads/develop') }}
        uses: anothrNick/github-tag-action@1.26.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BRANCHES: develop
          DRY_RUN: true
          DEFAULT_BUMP: patch
      - id: version
        name: Create Version
        run: |
          if [ -n "${{ steps.bump_version.outputs.new_tag }}" ]
          then
            echo ::set-output name=VERSION::${{ steps.bump_version.outputs.new_tag }}
            echo ::set-output name=LAST_VERSION::${{ steps.bump_version.outputs.ag }}
          elif [ -n "${{ steps.bump_version_dev.outputs.new_tag }}" ]
          then
            echo ::set-output name=VERSION::${{ steps.bump_version_dev.outputs.new_tag }}
            echo ::set-output name=LAST_VERSION::${{ steps.bump_version_dev.outputs.tag }}
          else
            echo ::set-output name=VERSION::$GITHUB_RUN_ID
            echo ::set-output name=LAST_VERSION::$GITHUB_RUN_ID
          fi

          changelog=$(git log --pretty=format:"* %s" "HEAD...${{ steps.bump_version_dev.outputs.tag }}" | uniq)
          changelog="${changelog//'%'/'%25'}"
          changelog="${changelog//$'\n'/'%0A'}"
          changelog="${changelog//$'\r'/'%0D'}"
          echo "::set-output name=CHANGELOG::$changelog"

  release:
    name: "Release"
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' }}
    runs-on: macos-latest
    needs: [ version ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: notifi-dmg
      - name: "Create Release"
        uses: ncipollo/release-action@v1
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          name: "Release ${{ needs.version.outputs.version }}"
          body: "${{ needs.version.outputs.changelog }}"
          prerelease: ${{ github.ref == 'refs/heads/develop' }}
          tag: ${{ needs.version.outputs.version }}
          commit: "${{ github.sha }}"
